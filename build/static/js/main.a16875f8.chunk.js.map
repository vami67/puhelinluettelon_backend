{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Person","person","removePerson","name","number","onClick","Persons","persons","map","key","id","Filter","searchName","handleSearchNameChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","nonErrorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Notification","message","style","errorStyle","Error","App","useState","setPersons","setNewName","setNewNumber","setSearchName","setMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","showNotification","setTimeout","event","target","preventDefault","personObject","existsPerson","find","window","confirm","returnedPerson","catch","error","showError","concat","n","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.a16875f8.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => {\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name:\n          <input\n          value={newName}\n          onChange={handleNameChange}\n        />\n      </div>\n      <div>\n        number:\n          <input\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\n\n\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, removePerson }) => {\n  return (\n    <li>\n      {person.name} {person.number} <button onClick={() => removePerson(person)}>delete</button>\n    </li>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, removePerson }) => {\n  return (\n    <ul>\n      {persons.map((person) =>\n        <Person\n          key={person.id}\n          person={person}\n          removePerson={removePerson}\n        />\n      )}\n    </ul>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({searchName, handleSearchNameChange }) => {\n  return (\n    <div>\n      filter shown with\n      <input\n        value={searchName}\n        onChange={handleSearchNameChange}\n      />\n    </div>\n  )\n}\nexport default Filter","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst nonErrorStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 16,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n}\n\nconst Notification = ({ message }) => {\n\n    if (message === null) {\n        return null\n    }\n    return (\n        <div style={nonErrorStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst errorStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n}\n\nconst Error = ({ message }) => {\n\n    if (message === null) {\n        return null\n    }\n    return (\n        <div style={errorStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Error","import React, { useState, useEffect } from 'react'\n\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const personsToShow = persons.filter((person) => person.name.toLowerCase().includes(searchName.toLowerCase()))\n\n  const handleSearchNameChange = (event) => {\n    setSearchName(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const showNotification = (message) => {\n    setMessage(\n      message\n    )\n    setTimeout(() => {\n      setMessage(null)\n    }, 2000)\n  }\n\n  const showError = (message) => {\n    setErrorMessage(\n      message\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    let existsPerson = persons.find((person) => person.name === personObject.name)\n\n    if (existsPerson) {\n      if (window.confirm(`${existsPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n          .update(existsPerson.id, personObject)\n          .then(\n            returnedPerson => {\n              setPersons(persons.map(person => person.id !== existsPerson.id ? person : returnedPerson))\n              showNotification(`${returnedPerson.name} updated`)\n            }\n          )\n          .catch(error => {\n            showError(`the note '${existsPerson.name}' was already deleted from server`)\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          showNotification(`${returnedPerson.name} added`)\n        })\n\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removePerson = person => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n        .remove(person.id)\n        .then(() => {\n          setPersons(persons.filter(n => n.id !== person.id))\n          showNotification(`${person.name} deleted`)\n        }\n        )\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Error message={errorMessage} />\n      <Filter\n        handleSearchNameChange={handleSearchNameChange}\n      />\n      <h3>Add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={personsToShow}\n        removePerson={removePerson}\n      />\n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}